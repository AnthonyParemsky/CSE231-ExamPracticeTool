CSE 231 FS17             Last name (printed):  ________________________________

Exam #3                  First name (printed): ________________________________

Form 3 B                 


Directions:

a. DO NOT OPEN YOUR EXAM BOOKLET UNTIL YOU HAVE BEEN TOLD TO BEGIN.

b. This exam booklet contains 40 questions, each of which will be weighted
equally at 5 points each.  The total points for the exam is 200 points.

c. You may use one 8.5" x 11" note sheet during the exam.  No other reference
materials or electronic devices may be used during the examination, i.e. no
calculators, cell phones, mp3 players, etc.. Paper dictionaries are allowed.

d. Questions will not be interpreted during the examination.

e. You should choose the single best alternative for each question, even if
you believe that a question is ambiguous or contains a typographic
error.  If a question has more than one best answer, credit will be
given for any of the correct answers.

f. Please fill in the requested information at the top of this exam booklet.

g. Use a #2 pencil to encode any information on the OMR form.

h. Please encode the following on the OMR form:

     -- Last name and first initial
     -- MSU PID
     -- Exam form (3 B)

i. Please sign the OMR form.

j. Only answers recorded on your OMR form for multiple choice questions will be 
counted for credit.  Completely erase any responses on the OMR form that you 
wish to delete.

k. You must turn in this exam booklet and the OMR form when you have completed
the exam.  When leaving, please be courteous to those still taking the exam.

Form 3B
1    2    3    4    5    6    7    8    9    10   11   12   13   14   15
D    E    C    AD   B    E    B    B    B    C    A    A    A    A    B

16   17   18   19   20   21   22   23   24   25   26   27   28   29   30
B    D    D    B    E    C    B    C    B    C    A    D    B    B    E

31   32   33   34   35   36   37   38   39   40
B    A    C    C    E    E    B    B    BC   E

01. What is printed by: print(0%3)

     A) 1
     B) 2
     C) 3
     D) 0
     E) None of the above
	 
02. Given the dictionary d1 = {1:'a', 2:'b'}
    what code reverses the mapping? That is
    generates d2 = {'a':1, 'b':2}

    A) d2 = d1.items().reversed()
    B) d2 = dict([(k,v) for k,v in d1.items()])
    C) d2 = dict(sorted(tuple(d1)))
    D) d2 = dict(tuple(d1))
    E) None of the above

03. Given: S1 = {1,2} and S2 = {2,3}
    what is the value of S after this operation: S = S1 - S2

    A) {1, 2, 3}
    B) {1, 2}
    C) {1}
    D) {2}
    E) None of the above

04. Given s = "To be, or not to be, that is the question"
    which code produces the following?
   ['To', 'be,', 'or', 'not', 'to', 'be,', 'that', 'is', 'the', 'question']

    A) s.split()
    B) s.split().strip()
    C) s.split().strip(',')
    D) s.strip().split(' ')
    E) None of the above
	
05. What is printed by: print(2**3*2)

     A) 64
     B) 16
     C) 12
     D) 9
     E) None of the above

06. Given: x = 1
    which expression returns True?

    A) 2 < x < 10
    B) x <= -12
    C) x > 1
    D) All of the above
    E) None of the above

07. Given: s = 'slime'
    what is printed by: print(s.find('e'))

    A) -1
    B) 4
    C) 5
    D) True
    E) None of the above 

08. Given: x = 0
    what is printed by: 
    if x:
        print("Here")
    else:
        print("There")

    A) Here
    B) There
    C) None of the above

09. What is printed by: print('a' or False)

    A) 0
    B) a
    C) False
    D) Yes
    E) None of the above
	
############
# Figure 1 #
############

  L = []       
  for i in range(5):
      if i%2 == 0:
          L.append(i+1)
          continue
      elif i>3:
          break
  else:
      print("else executed")  # Line 1
  
  print(L)  # Line 2

10. What is the output of Line 2 when the program in Figure 1 is executed?

   A) [1, 3]
   B) [2, 4]
   C) [1, 3, 5]
   D) [0, 2, 4]
   E) None of the above.

11. When the program in Figure 1 is run Line 1 is executed.

   A) True
   B) False

############
# Figure 2 #
############       

  def f(x,y):
      x.pop(1)
      z = x + y
      return z
      
  A = [1,2]
  B = A
  print(f(A,B))  # Line 1
  print(A)       # Line 2
  print(B)       # Line 3

12. When the code in Figure 2 is run what is printed by Line 1?

    A) [1, 1]
    B) [2, 1, 2]
    C) [1, 2, 1]
    D) [1, 2, 1, 2]
    E) None of the above

13. When the code in Figure 2 is run what is printed by Line 2?

    A) [1]
    B) [2]
    C) [1, 2]
    D) []
    E) None of the above
	 
14. When the code in Figure 2 is run what is printed by Line 3?

    A) [1]
    B) [2]
    C) [1, 2]
    D) []
    E) None of the above

15. Given 
      i = 5
      for i in range(10):
          pass
      print(i)   # Line 1

    What is printed by Line 1:

     A) 10
     B) 9
     C) 5
     D) 4
     E) None of the above

  class MyClass (object):
      def __init__(self, L=[]):             ############
          if L:                             # Figure 3 # 
              self.L = L                    ############
          else:
              self.L = []
  
      def __str__(self):
          s = 'L: '
          for i in self.L:
              s += str(i) + ' '
          return s
  
      def method1(self,x):
          self.L.append(x)
  
      def method2(self,x=0):
          for i,j in enumerate(self.L):
              self.L[i] = j*x
          return MyClass(self.L)
			  
  inst1 = MyClass()
  print(inst1)                  # Line 1
  inst2 = MyClass([2,3,0])
  print(inst2)                  # Line 2
  inst2.method1(1)       
  print(inst2)                  # Line 3
  print(inst2.method2(2))       # Line 4
  inst3 = MyClass(['a','b','c'])
  print(inst3.method1(2))       # Line 5
    
16. What is the output of Line 1 when the program in Figure 3 is executed?

   A) L: None
   B) L:
   C) L: []
   D) Nothing is printed
   E) None of the above

17. What is the output of Line 2 when the program in Figure 3 is executed?

   A) L: [0, 2, 3]
   B) L: 0 2 3
   C) L: [2, 3, 0]
   D) L: 2 3 0
   E) None of the above

18. What is the output of Line 3 when the program in Figure 3 is executed?

   A) L: [0, 1, 2, 3]
   B) L: 0 1 2 3
   C) L: [2, 3, 0, 1]
   D) L: 2 3 0 1
   E) None of the above

19. What is the output of Line 4 when the program in Figure 3 is executed?

   A) L: [4, 6, 0, 2]
   B) L: 4 6 0 2
   C) L: [4, 6, 0]
   D) L: 4 6 0
   E) None of the above

20. What is the output of Line 5 when the program in Figure 3 is executed?

   A) L: ['a', 'b', 'c', 2]
   B) L: a b c 2
   C) L: [2, 'a', 'b', 'c']
   D) L: 2 a b c
   E) None of the above
   
############
# Figure 4 #
############

  class rectangle(object):
      def __init__(self,w=1,h=1,s="rectangle"):
          """create rectangle of width w and height h"""
          self.shape = s
          self.width = w
          self.height = h
  
      def perimeter(self):
          return 2*(self.height+self.width)
  
  class square(rectangle):
      def __init__(self,l=1,s="square"):
          """create square, argument gives side length"""
          rectangle.__init__(self,l,l,s)
      
  r = rectangle(3)
  print(r.perimeter())  # Line 1
  print(r.width)        # Line 2
  s = square(2)
  print(s.perimeter())  # Line 3

21. What output does Line 1 from Figure 4 produce?

    A) 2
    B) 3
    C) 8
    D) 16
    E) None of the above

22. What output does Line 2 from Figure 4 produce?

    A) 2
    B) 3
    C) 8
    D) 16
    E) None of the above

23. What output does Line 3 from Figure 4 produce?

    A) 2
    B) 3
    C) 8
    D) 16
    E) None of the above

############
# Figure 5 #
############
  class TestClass(object):
      def __init__(self, L=None):
          if L == None:
              self.L = []
          else:
              self.L = L
        
      def __add__(self,param):
          if type(param) == TestClass:
              L = self.L + param.L
              return TestClass(L)
          else:
              self.L.append(param)
              return self.L

      def __radd__(self,param):
          self.L = [param] + self.L    
          return self.L
        
      def __str__(self):
          return str(self.L)

  inst1 = TestClass(['a','b'])
  inst2 = TestClass(['x','y'])
  sum_1 = inst1 + inst2
  print(inst1)                         # Line 1
  print(sum_1)                         # Line 2
  print(isinstance(sum_1,TestClass))   # Line 3
  sum_2 = 'x' + inst1
  print(sum_2)                         # Line 4
  print(type(sum_2))                   # Line 5

24. What output does Line 1 from Figure 5 produce?

    A) ['a', 'b', 'c']
    B) ['a', 'b']
    C) ['x', 'y']
    D) TestClass
    E) None of the above

25. What output does Line 2 from Figure 5 produce?

    A) ['a', 'b', 'c']
    B) ['x', 'y', 'a', 'b']
    C) ['a', 'b', 'x', 'y']
    D) TestClass
    E) None of the above

26. What output does Line 3 from Figure 5 produce?

    A) True
    B) False
    C) None of the above
	
27. What output does Line 4 from Figure 5 produce?

    A) ['x', 'y', 'x']
    B) ['a', 'b', 'x']
    C) ['x', 'x', 'y']
    D) ['x', 'a', 'b']
    E) None of the above

28. What output does Line 5 from Figure 5 produce?

    A) string
    B) list
    C) TestClass
    D) int
    E) character

############
# Figure 6 #
############
  class TestClass2(object):
      def __init__(self,S=None):
          self.S = set()
          if S:
              for i in S:
                  if i%3 == 1:
                      self.S.add(i)

      def __add__(self,param):
          self.S |= param.S
          return TestClass2(self.S)

      def __str__(self):
          return 'S: {}'.format(self.S)

  inst1 = TestClass2({0,0,1,2,2,2,3,4})
  inst2 = TestClass2({5,6,8})
  print(inst1)                               # Line 1
  print(inst2)                               # Line 2
  sum_inst_1 = inst1 + inst2
  print(sum_inst_1)                          # Line 3

29. What output does Line 1 from Figure 6 produce?

    A) S: {5,8}
    B) S: {1,4}
    C) S: {1,4,7}
    D) S: {7}
    E) None of the above

30. What output does Line 2 from Figure 6 produce?

    A) S: {5,8}
    B) S: {1,4}
    C) S: {1,4,7}
    D) S: {7}
    E) None of the above

31. What output does Line 3 from Figure 6 produce?

    A) S: {5,8}
    B) S: {1,4}
    C) S: {1,4,7}
    D) S: {7}
    E) None of the above

############
# Figure 7 #
############
  
  class Classy(object):
      def __init__(self,a=2,b=3):
          self.first = int(a)
          self.__second = int(b)
  
      def __str__(self):
          return str(self.first) + str(self.__second)
  
  try:    
      A = Classy()
      print(A)          # Line 1
      A.first = 7
      print(A)          # Line 2
      print(A.first)    # Line 3
      B = Classy('a')
      print(B)          # Line 4
  except ValueError:
      print("exception!")
  finally:
      print(A.__second) # Line 5

32. What output does Line 1 from Figure 7 produce?

    A) 23
    B) 32
    C) 2+3
    D) ab
    E) None of the above

33. What output does Line 2 from Figure 7 produce?

    A) 23
    B) 32
    C) 73
    D) 27
    E) None of the above

34. What output does Line 3 from Figure 7 produce?

    A) 2
    B) 3 
    C) 7
    D) a
    E) None of the above

35. What output does Line 4 from Figure 7 produce?

    A) 2a
    B) a3 
    C) a7
    D) 7a
    E) None of the above

36. What output does Line 5 from Figure 7 produce?

    A) 2
    B) 3
    C) 7
    D) a
    E) None of the above

37. Consider this code
  L1 = [1,2]
  L2 = [3, L1, 4]
  L1.pop()
  print(L2)   # Line 1

  What is printed by Line 1?

    A) [3, [1, 2], 4]
    B) [3, [1], 4]
    C) [3, 1, 4]
    D) [3, 'L1', 4]
    E) None of the above
	
38. What does this expression return?
        {a*b for a in range(2) for b in range(2)}
   
    A) {0, 0, 0, 1}
    B) {0, 1}
    C) {0: 1, 1: 1}
    D) {0: 0, 0:1, 1:0, 1: 1}
    E) None of the above

39. Given D = {1:2}
    What code changes D to be {}?

     A) del D[1:2]
     B) try:
            del D[1]
        except KeyError:
            del D[1]
     C) D.pop(1,0)
     D) All of the above
     E) None of the above

############
# Figure 8 #
############

  import pylab
  v1 = [20, 80, 50]
  v2 = [15, 12, 8]
  pylab.plot(v1,v2)
  
40. What happens when the code in Figure 8 is run?

    A) Draws a bar plot, v1 values on x-axis, v2 values on y-axis 
    B) Draws a bar plot, v1 values on y-axis, v2 values on x-axis
    C) Draws a scatter plot, v1 values on x-axis, v2 values on y-axis
    D) Draws a scatter plot, v1 values on y-axis, v2 values on x-axis
    E) None of the above	